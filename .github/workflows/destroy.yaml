name: 'Terraform - Destroy'

on:
  workflow_dispatch:
  # schedule:
  #   - cron: '55 10 * * *'

jobs:
  # terraform_destroy_plan:
  #   name: 'Terraform destroy plan'
  #   runs-on: ubuntu-latest
  #   env:
  #     ARM_CLIENT_ID: ${{ secrets.AZURE_AD_CLIENT_ID }}
  #     ARM_CLIENT_SECRET: ${{ secrets.AZURE_AD_CLIENT_SECRET }}
  #     ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
  #     ARM_TENANT_ID: ${{ secrets.AZURE_AD_TENANT_ID }}

  #   defaults:
  #     run:
  #       shell: bash
  #       working-directory: "./Terraform"
  
  #   steps:
  #     # Checkout the repository to the GitHub Actions runner
  #     - uses: actions/checkout@v3
  #     - uses: hashicorp/setup-terraform@v2

  #     - name: Terraform Init
  #       id: init
  #       run: terraform init
 
  #     - name: Show Destroy plan
  #       run: terraform plan -destroy
  #       continue-on-error: true
  
  terraform_destroy:
    name: 'Terraform destroy'
    needs: 'terraform_destroy_plan'
    env:
      ARM_CLIENT_ID: ${{ secrets.AZURE_AD_CLIENT_ID }}
      ARM_CLIENT_SECRET: ${{ secrets.AZURE_AD_CLIENT_SECRET }}
      ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      ARM_TENANT_ID: ${{ secrets.AZURE_AD_TENANT_ID }}
    runs-on: ubuntu-latest
    # environment: production

    defaults:
      run:
        shell: bash
        working-directory: "./Terraform"
    steps:
      - uses: actions/checkout@v3
      - uses: hashicorp/setup-terraform@v2

      - name: Terraform Init
        id: init
        run: terraform init
      
      - name: Terraform destroy
        id: destroy
        run: terraform destroy -auto-approve -var-file="./tfvars/custom_vars.tfvars"